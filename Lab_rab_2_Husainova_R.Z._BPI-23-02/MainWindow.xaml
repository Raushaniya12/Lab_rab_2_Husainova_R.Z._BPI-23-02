<Window x:Class="Lab_rab_2_Husainova_R.Z._BPI_23_02.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Lab_rab_2_Husainova_R.Z._BPI_23_02"
        mc:Ignorable="d"
        Title="MainWindow" Height="400" Width="570" MinHeight="400" MinWidth="570">
    <Window.Resources>
        <local:Function1 x:Key="Func1"/>
        <local:Function2 x:Key="Func2"/>
        <local:Function3 x:Key="Func3"/>
        <local:Function4 x:Key="Func4"/>
        <local:Function5 x:Key="Func5"/>
        <Style TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
            <Setter Property="Margin" Value="3" />
            <Setter Property="Padding" Value="3,2" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                    x:Name="border"
                    Background="{TemplateBinding Background}">
                            <ContentPresenter 
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" 
                                Value="{DynamicResource ButtonHoverBackground}" />
                            </Trigger>
                            <Trigger Property="Tag" Value="Active">
                                <Setter TargetName="border" Property="Background" 
                                Value="{DynamicResource ButtonActiveBackground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
            <Setter Property="Padding" Value="3" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        </Style>

        <Style TargetType="ListBox">
            <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Transparent" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border 
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                                <ContentPresenter 
                            x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            IsHitTestVisible="False" />
                            </Border>
                            <ToggleButton 
                        x:Name="toggleButton"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Width="20"
                        Cursor="Hand">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid Background="Transparent">
                                            <Path 
                                        x:Name="arrowPath"
                                        Data="M 0 0 L 4 4 L 8 0 Z"
                                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="arrowPath" Property="Fill" 
                                                Value="{DynamicResource ButtonHoverBackground}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <Popup 
                        x:Name="PART_Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True"
                        Focusable="False"
                        PopupAnimation="Slide">
                                <Border 
                            Background="{DynamicResource TextBoxBackground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                                    <ScrollViewer MaxHeight="200">
                                        <ItemsPresenter 
                                    MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
            <Setter Property="Padding" Value="5,3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border 
                    x:Name="border"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" 
                                Value="{DynamicResource ButtonHoverBackground}" />
                                <Setter Property="Foreground" 
                                Value="{DynamicResource ButtonForeground}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="Background" 
                                Value="{DynamicResource ButtonActiveBackground}" />
                                <Setter Property="Foreground" 
                                Value="{DynamicResource ButtonForeground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <StackPanel>
        <RadioButton  Margin="5" Name="Radio1">
            <WrapPanel>
                <Image Source="{Binding ImagePath, Source={StaticResource Func1}}" Height="25"/>
                <GroupBox Header="Параметры функции">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="a" Grid.Row="0" Grid.Column="0"/>
                        <TextBox x:Name="R1TextA" Text="0" Grid.Row="0" Grid.Column="1"
                             PreviewTextInput="TextBox_PreviewTextInput" MinWidth="70"/>
                        <Label Content="f" Grid.Row="1" Grid.Column="0"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" SelectedIndex="0" x:Name="R1CombF">
                            <ComboBoxItem Content="4"/>
                            <ComboBoxItem Content="5"/>
                            <ComboBoxItem Content="6"/>
                            <ComboBoxItem Content="7"/>
                            <ComboBoxItem Content="8"/>
                            <ComboBoxItem Content="9"/>
                        </ComboBox>
                    </Grid>
                </GroupBox>
                <WrapPanel>
                    <Button x:Name="BtnLight" Content="☀️"  Click="BtnLight_Click"/>
                    <Button x:Name="BtnDark" Content=" 🌙"  Click="BtnDark_Click"/>
                </WrapPanel>
            </WrapPanel>
            
        </RadioButton>
        <RadioButton Margin="5" Name="Radio2">
            <WrapPanel>
                <Image Source="{Binding ImagePath, Source={StaticResource Func2}}" Height="20"/>
                <GroupBox Header="Параметры функции">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="a"/>
                        <TextBox Text="0"  MinWidth="70" x:Name="R2TextA"
                                 PreviewTextInput="TextBox_PreviewTextInput"/>
                        <Label Content="b"/>
                        <TextBox Text="0"  MinWidth="70" x:Name="R2TextB"
                                 PreviewTextInput="TextBox_PreviewTextInput"/>
                        <Label Content="f"/>
                        <ComboBox MinWidth="100" SelectedIndex="0" x:Name="R2CombF">
                            <ComboBoxItem Content="10"/>
                            <ComboBoxItem Content="20"/>
                            <ComboBoxItem Content="30"/>
                            <ComboBoxItem Content="40"/>
                        </ComboBox>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
        </RadioButton>
        <RadioButton Margin="5" Name="Radio3">
            <WrapPanel>
                <Image Source="{Binding ImagePath, Source={StaticResource Func3}}" Height="25"/>
                <GroupBox Header="Параметры функции">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="a"/>
                        <TextBox Text="0"  MinWidth="50" x:Name="R3TextA"
                                 PreviewTextInput="TextBox_PreviewTextInput"/>
                        <Label Content="b"/>
                        <TextBox Text="0"  MinWidth="50" x:Name="R3TextB"
                                 PreviewTextInput="TextBox_PreviewTextInput"/>
                        <Label Content="c"/>
                        <ComboBox MinWidth="50" SelectedIndex="0" x:Name="R3CombC">
                            <ComboBoxItem Content="0"/>
                            <ComboBoxItem Content="1"/>
                        </ComboBox>
                        <Label Content="d"/>
                        <ComboBox MinWidth="70" SelectedIndex="0" x:Name="R3CombD">
                            <ComboBoxItem Content="-1"/>
                            <ComboBoxItem Content="0"/>
                            <ComboBoxItem Content="1"/>
                        </ComboBox>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
        </RadioButton>
        <RadioButton Margin="5" Name="Radio4">
            <WrapPanel>
                <Image Source="{Binding ImagePath, Source={StaticResource Func4}}" Height="36"/>
                <GroupBox Header="Параметры функции">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="c" VerticalAlignment="Center"/>
                        <ComboBox MinWidth="70" SelectedIndex="0" x:Name="R4CombC"
                          VerticalAlignment="Center">
                            <ComboBoxItem Content="0"/>
                            <ComboBoxItem Content="1"/>
                            <ComboBoxItem Content="2"/>
                        </ComboBox>
                        <Label Content="d" VerticalAlignment="Center"/>
                        <TextBox Text="0"  MinWidth="70" x:Name="R4TextD" ToolTip="Введите целое число"
                             VerticalAlignment="Center" PreviewTextInput="TextBox_PreviewTextInput"/>
                        <Label Content="a" VerticalAlignment="Center"/>
                        <TextBox Text="0"  MinWidth="70" 
                         VerticalAlignment="Center" x:Name="R4TextA"
                         PreviewTextInput="TextBox_PreviewTextInput"/>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
        </RadioButton>
        <RadioButton Margin="5" Name="Radio5">
            <WrapPanel>
                <Image Source="{Binding ImagePath, Source={StaticResource Func5}}" Height="35"/>
                <GroupBox Header="Параметры функции Z">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="x"/>
                        <TextBox  MinWidth="60" x:Name="R5TextX" Margin="2"
                                 PreviewTextInput="TextBox_PreviewTextInput"/>
                        <Label Content="y"/>
                        <TextBox  MinWidth="60" x:Name="R5TextY" Margin="2"
                                 PreviewTextInput="TextBox_PreviewTextInput"/>
                        <Label Content="N ="/>
                        <TextBox  MinWidth="50" x:Name="R5TextN" Margin="2"
                                 PreviewTextInput="TextBox_PreviewTextInput" ToolTip="Введите целое число"/>
                        <Label Content="K ="/>
                        <TextBox  MinWidth="50" x:Name="R5TextK" Margin="2"
                                 PreviewTextInput="TextBox_PreviewTextInput" ToolTip="Введите целое число"/>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
        </RadioButton>
        <Button Content="Считать" Margin="10" HorizontalAlignment="Center"
                Click="BtnCalculate_Click"/>
    </StackPanel>
</Window>